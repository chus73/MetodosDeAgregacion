knitr::opts_chunk$set(echo = TRUE)
library(kableExtra)
library(plyr)
library(ggplot2)
library(tidyverse)
library(cluster)
library(arules)
#library(factoextra)
# Lectura del fichero
df <- read.csv('clientes.csv', header = T, sep = ',', stringsAsFactors = T)
print(paste('# de filas cargadas: ', nrow(df)))
str(df)
which(is.na.data.frame(df) ==T)
summary(df)
library(ggplot2)
ggplot(df, aes(x=Genre, fill= Genre)) + geom_bar()
library(gridExtra)
p1 <- ggplot(data=df,aes(x=Age, color=Age))+geom_boxplot()
p2 <- ggplot(data=df,aes(x=Annual_Income_.k.., color=Annual_Income_.k..))+geom_boxplot()
p3 <- ggplot(data=df,aes(x=Spending_Score, color=Spending_Score))+geom_boxplot()
grid.arrange(p1, p2, p3, ncol=3, top= 'Boxplox Compare main attributes')
summary(df$Age)[3:4]
out <- boxplot(df$Annual_Income_.k..)$out
out
color <- "#404080"
p1 <- ggplot(data=df,aes(x=Age, fill=Genre))+ geom_histogram(bins = 25, color=color)
p2 <- ggplot(data=df,aes(x=Annual_Income_.k.., fill=Genre))+ geom_histogram(bins = 25, color=color)
p3 <- ggplot(data=df,aes(x=Spending_Score, fill=Genre))+ geom_histogram(bins = 25, color=color)
grid.arrange(p1, p2, p3, ncol=2, top= 'Histogram distribution by Genre')
summary(df$Annual_Income_.k..)
summary(df$Annual_Income_.k..)[1, 6]
summary(df$Annual_Income_.k..)[1, 5]
summary(df$Annual_Income_.k..)[c(1,5)]
summary(df$Annual_Income_.k..)[c(1,-1)]
summary(df$Annual_Income_.k..)[c(1,6)]
print(paste('Valores extremos de Ingresos anuales: ', summary(df$Annual_Income_.k..)[c(1,6)]))
print(('Valores extremos de Ingresos anuales: ', summary(df$Annual_Income_.k..)[c(1,6)])
print('Valores extremos de Ingresos anuales: '); print() summary(df$Annual_Income_.k..)[c(1,6)]))
print('Valores extremos de Ingresos anuales: '); print() summary(df$Annual_Income_.k..)[c(1,6)])
print('Valores extremos de Ingresos anuales: '); print(summary(df$Annual_Income_.k..)[c(1,6)]))
print('Valores extremos de Ingresos anuales: '); print(summary(df$Annual_Income_.k..)[c(1,6)])
str(df)
print('Valores extremos de Puntuación del gasto: '); print(summary(df$ Spending_Score)[c(1,6)])
print('Valores extremos de Ingresos anuales: '); print(summary(df$Annual_Income_.k..)[c(1,6)])
print('Valores extremos de Puntuación del gasto: '); print(summary(df$ Spending_Score)[c(1,6)])
df.norm <- scale(df[,c('Age', 'Annual_Income_.k..', 'Spending_Score')], center = T, scale = T)
df.norm <- scale(df[,c('Age', 'Annual_Income_.k..', 'Spending_Score')], center = T, scale = T)
#df.norm <- cbind(df[, 1:2], df.norm)
#kable(head(df.norm), format = "markdown")
head(df.norm)
# Semilla
set.seed(123)
max.k <- 8
k_dist <- data.frame(matrix(ncol = 2, nrow = 0))
d <- daisy(as.data.frame(df.norm$Age))
# Semilla
set.seed(123)
max.k <- 8
k_dist <- data.frame(matrix(ncol = 2, nrow = 0))
d <- daisy(as.data.frame(df.norm$Age))
df.norm
df.norm$Age
type(df.norm)
class(df.norm)
df.norm <- as.data.frame(scale(df[,c('Age', 'Annual_Income_.k..', 'Spending_Score')], center = T, scale = T))
#df.norm <- cbind(df[, 1:2], df.norm)
#kable(head(df.norm), format = "markdown")
head(df.norm)
head(df.norm)
class(df.norm)
# Semilla
set.seed(123)
max.k <- 8
k_dist <- data.frame(matrix(ncol = 2, nrow = 0))
d <- daisy(as.data.frame(df.norm$Age))
for (k in 2: max.k){
fit.k <- kmeans(df.norm$Age, k,nstart = 25)
sk <- silhouette(fit.k$cluster, d)
k_dist <- rbind(k_dist, c(k, mean(sk[,3])))
}
names(k_dist) <- c('k', 'dist')
plot(k_dist[,1], k_dist[,2],
type = "b", pch = 19, frame = FALSE,
xlab = "Number of clusters K",
ylab = "Average Silhouettes")
k <- 2
fit_2 <- kmeans(df.norm$Age, centers= k , nstart = 25)
df.norm$k.2 <- fit_2$cluster
ggplot(df.norm, aes(x=Age, y = Annual_Income_.k.., color=k.2)) +
geom_point()
d <- daisy(df.norm)
resultados.s <- rep(0,10)
resultados.w <- rep(0,10)
for (i in 2:10){
fit <- kmeans(df.norm, i)
y_cluster <- fit$cluster
sk <- silhouette(y_cluster, d)
resultados.s[i] <- mean(sk[,3])
resultados.w[i] <- fit$tot.withinss
}
plot(2:10, resultados.s[2:10], type = "o", col="blue", pch=0, xlab= "Número de clusters", ylab="Silueta")
#clusplot(as.data.frame(df.norm$Age), fit_2$cluster, color=T, shade = T)
plot(2:10, resultados.w[2:10], type = "o", col="blue", pch=0, xlab= "Número de clusters", ylab="tot.Withinss")
cl2 <- kmeans(df.norm, 2)
pairs(df.norm, col= cl2$cluster)
cl3 <- kmeans(df.norm, 3)
pairs(df.norm, col= cl3$cluster)
cl4 <- kmeans(df.norm, 4)
pairs(df.norm, col= cl4$cluster)
cl4 <- kmeans(df.norm, 4)
pairs(df.norm, col= cl4$cluster)
df <- read.csv(file = 'lastfm.csv', header = T, sep = ',', stringsAsFactors = T)
View(df.norm)
# Lectura del fichero
df <- read.csv('clientes.csv', header = T, sep = ',', stringsAsFactors = T)
print(paste('# de filas cargadas: ', nrow(df)))
str(df)
which(is.na.data.frame(df) ==T)
summary(df)
ggplot(df, aes(x=Genre, fill= Genre)) + geom_bar()
ggplot(df, aes(x=Genre, fill= Genre)) + geom_bar()
print(table(df$Genre))
p1 <- ggplot(data=df,aes(x=Age, color=Age))+geom_boxplot()
p2 <- ggplot(data=df,aes(x=Annual_Income_.k.., color=Annual_Income_.k..))+geom_boxplot()
p3 <- ggplot(data=df,aes(x=Spending_Score, color=Spending_Score))+geom_boxplot()
grid.arrange(p1, p2, p3, ncol=3, top= 'Boxplox Compare main attributes')
summary(df$Age)[3:4]
out <- boxplot(df$Annual_Income_.k..)$out
out
color <- "#404080"
p1 <- ggplot(data=df,aes(x=Age, fill=Genre))+ geom_histogram(bins = 25, color=color)
p2 <- ggplot(data=df,aes(x=Annual_Income_.k.., fill=Genre))+ geom_histogram(bins = 25, color=color)
p3 <- ggplot(data=df,aes(x=Spending_Score, fill=Genre))+ geom_histogram(bins = 25, color=color)
grid.arrange(p1, p2, p3, ncol=2, top= 'Histogram distribution by Genre')
print('Valores extremos de Ingresos anuales: '); print(summary(df$Annual_Income_.k..)[c(1,6)])
print('Valores extremos de Puntuación del gasto: '); print(summary(df$ Spending_Score)[c(1,6)])
#normalize <- function(x){
#  return(x-min(x)/(max(x)-min(x)))
#}
#df.norm <- as.data.frame(apply(df[,c('Age', 'Annual_Income_.k..', 'Spending_Score')], 2,  normalize()))
#head(df)
df.norm <- as.data.frame(scale(df[,c('Age', 'Annual_Income_.k..', 'Spending_Score')], center = T, scale = T))
#df.norm <- cbind(df[, 1:2], df.norm)
#kable(head(df.norm), format = "markdown")
head(df.norm)
# Semilla
set.seed(123)
max.k <- 8
k_dist <- data.frame(matrix(ncol = 2, nrow = 0))
d <- daisy(as.data.frame(df.norm$Age))
for (k in 2: max.k){
fit.k <- kmeans(df.norm$Age, k,nstart = 25)
sk <- silhouette(fit.k$cluster, d)
k_dist <- rbind(k_dist, c(k, mean(sk[,3])))
}
names(k_dist) <- c('k', 'dist')
plot(k_dist[,1], k_dist[,2],
type = "b", pch = 19, frame = FALSE,
xlab = "Number of clusters K",
ylab = "Average Silhouettes")
k <- 2
fit_2 <- kmeans(df.norm$Age, centers= k , nstart = 25)
df.norm$k.2 <- fit_2$cluster
ggplot(df.norm, aes(x=Age, y = Annual_Income_.k.., color=k.2)) +
geom_point()
d <- daisy(df.norm)
resultados.s <- rep(0,10)
resultados.w <- rep(0,10)
for (i in 2:10){
fit <- kmeans(df.norm, i)
y_cluster <- fit$cluster
sk <- silhouette(y_cluster, d)
resultados.s[i] <- mean(sk[,3])
resultados.w[i] <- fit$tot.withinss
}
plot(2:10, resultados.s[2:10], type = "o", col="blue", pch=0, xlab= "Número de clusters", ylab="Silueta")
#clusplot(as.data.frame(df.norm$Age), fit_2$cluster, color=T, shade = T)
plot(2:10, resultados.w[2:10], type = "o", col="blue", pch=0, xlab= "Número de clusters", ylab="tot.Withinss")
cl2 <- kmeans(df.norm, 2)
pairs(df.norm, col= cl2$cluster)
cl3 <- kmeans(df.norm, 3)
pairs(df.norm, col= cl3$cluster)
cl4 <- kmeans(df.norm, 4)
pairs(df.norm, col= cl4$cluster)
nrow(df.norm)
last_train_row <- round(nrow(df.norm) * 0.1,0)
last_train_row
last_train_row <- nrow(df.norm) - round(nrow(df.norm) * 0.1,0)
last_train_row
df.norm.test <- df.norm.train <- df.norm[last_train_row+1, ]
nrow(df.norm.test)
df.norm.test <- df.norm[last_train_row+1, ]
nrow(df.norm.test)
df.norm.train <- df.norm[1:last_train_row, ]
df.norm.test <- df.norm[last_train_row+1, ]
nrow(df.norm.test)
df.norm.train
df.norm.test
df.norm.test <- df.norm[(last_train_row+1), ]
df.norm.test
last_train_row
last_train_row +1
df.norm.test <- df.norm[(last_train_row+1): , ]
df.norm.test <- df.norm[(last_train_row+1):nrow(df.norm) , ]
df.norm.test
df.norm.train
df.norm.test
library(class)
library(class)
head(df)
d <- daisy(df.norm)
resultados.s <- rep(0,10)
resultados.w <- rep(0,10)
resultados.tw <- rep(0,10)
for (i in 2:10){
fit <- kmeans(df.norm, i)
y_cluster <- fit$cluster
sk <- silhouette(y_cluster, d)
resultados.s[i] <- mean(sk[,3])
resultados.tw[i] <- fit$tot.withinss
resultados.w[i] <- sum(fit$withinss)
}
plot(2:10, resultados.s[2:10], type = "o", col="blue", pch=0, xlab= "Número de clusters", ylab="Silueta")
#clusplot(as.data.frame(df.norm$Age), fit_2$cluster, color=T, shade = T)
resultados.tw
resultados.w
d <- daisy(df.norm)
resultados.s <- rep(0,10)
resultados.w <- rep(0,10)
for (i in 2:10){
fit <- kmeans(df.norm, i)
y_cluster <- fit$cluster
sk <- silhouette(y_cluster, d)
resultados.s[i] <- mean(sk[,3])
resultados.w[i] <- sum(fit$withinss)
}
plot(2:10, resultados.s[2:10], type = "o", col="blue", pch=0, xlab= "Número de clusters", ylab="Silueta")
#clusplot(as.data.frame(df.norm$Age), fit_2$cluster, color=T, shade = T)
ggplot() + geom_point(aes(x = 2:10, y = resultados.w), color = 'blue') +
geom_line(aes(x = 1:20, y = wcss), color = 'blue') +
ggtitle("Método del Codo") +
xlab('Cantidad de Centroides k') +
ylab('WCSS')
ggplot() + geom_point(aes(x = 1:10, y = resultados.w), color = 'blue') +
geom_line(aes(x = 1:20, y = wcss), color = 'blue') +
ggtitle("Método del Codo") +
xlab('Cantidad de Centroides k') +
ylab('WCSS')
ggplot() + geom_point(aes(x = 1:10, y = resultados.w), color = 'blue') +
geom_line(aes(x = 1:20, y = resultados.w), color = 'blue') +
ggtitle("Método del Codo") +
xlab('Cantidad de Centroides k') +
ylab('WCSS')
ggplot() + geom_point(aes(x = 1:10, y = resultados.w), color = 'blue') +
geom_line(aes(x = 1:10, y = resultados.w), color = 'blue') +
ggtitle("Método del Codo") +
xlab('Cantidad de Centroides k') +
ylab('WCSS')
d <- daisy(df.norm)
resultados.s <- rep(0,10)
resultados.w <- rep(0,10)
for (i in 1:10){
fit <- kmeans(df.norm, i)
y_cluster <- fit$cluster
sk <- silhouette(y_cluster, d)
resultados.s[i] <- mean(sk[,3])
resultados.w[i] <- sum(fit$withinss)
}
d <- daisy(df.norm)
resultados.s <- rep(0,10)
resultados.w <- rep(0,10)
for (i in 2:10){
fit <- kmeans(df.norm, i)
y_cluster <- fit$cluster
sk <- silhouette(y_cluster, d)
resultados.s[i] <- mean(sk[,3])
resultados.w[i] <- sum(fit$withinss)
}
plot(2:10, resultados.s[2:10], type = "o", col="blue", pch=0, xlab= "Número de clusters", ylab="Método de la Silueta")
#clusplot(as.data.frame(df.norm$Age), fit_2$cluster, color=T, shade = T)
set.seed(1234)
d <- daisy(df.norm)
resultados.s <- rep(0,10)
resultados.w <- rep(0,10)
for (i in 2:10){
fit <- kmeans(df.norm, i)
y_cluster <- fit$cluster
sk <- silhouette(y_cluster, d)
resultados.s[i] <- mean(sk[,3])
resultados.w[i] <- sum(fit$withinss)
}
plot(2:10, resultados.s[2:10], type = "o", col="blue", pch=0, xlab= "Número de clusters", ylab="Método de la Silueta")
#clusplot(as.data.frame(df.norm$Age), fit_2$cluster, color=T, shade = T)
ggplot() + geom_point(aes(x = 1:10, y = resultados.w), color = 'blue') +
geom_line(aes(x = 1:10, y = resultados.w), color = 'blue') +
ggtitle("Método del Codo") +
xlab('Cantidad de Centroides k') +
ylab('WCSS')
library(ggdendro)
install.packages("ggdendro")
library(ggdendro)
dendrogram <- hclust(dist(df.norm, method = 'euclidean'), method = 'ward.D')
ggdendrogram(dendrogram, rotate = FALSE, labels = FALSE, theme_dendro = TRUE) +
labs(title = "Dendrograma")
library(ggdendro)
dendrogram <- hclust(dist(df.norm, method = 'euclidean'), method = 'ward.D')
ggdendrogram(dendrogram, rotate = FALSE, labels = FALSE, theme_dendro = TRUE) +
labs(title = "Dendrograma")
agrupamientoJ <- hclust(dist(df.norm, method = 'euclidean'), method = 'ward.D')
clases_aj <- cutree(agrupamientoJ, k = 3)
df.norm$cluster <- clases_aj
ggplot() + geom_point(aes(x = X, y = Y, color = cluster), data = dr.norm, size = 2) +
scale_colour_gradientn(colours=rainbow(4)) +
ggtitle('Clusters de Datos con k = 3 / Agrupamiento Jerárquico') +
xlab('X') + ylab('Y')
ggplot() + geom_point(aes(x = X, y = Y, color = cluster), data = df.norm, size = 2) +
scale_colour_gradientn(colours=rainbow(4)) +
ggtitle('Clusters de Datos con k = 3 / Agrupamiento Jerárquico') +
xlab('X') + ylab('Y')
head(df.norm)
ggplot() + geom_point(aes(x = Age, y = Annual_Income_.k.., color = cluster), data = df.norm, size = 2) +
scale_colour_gradientn(colours=rainbow(4)) +
ggtitle('Clusters de Datos con k = 3 / Agrupamiento Jerárquico') +
xlab('Age') + ylab('Annual_Income')
df.norm
head(df.norm)
df.norm$cluster<- NULL
k <- c(2,4,5,6)
agrupamientoJ <- hclust(dist(df.norm, method = 'euclidean'), method = 'ward.D')
for (i in k){
clases_aj <- cutree(agrupamientoJ, k = i)
df.norm[, paste0('cluster.', i)] <- clases_aj
}
#clases_aj <- cutree(agrupamientoJ, k = 3)
#df.norm$cluster <- clases_aj
head(df.norm)
ggplot() + geom_point(aes(x = Age, y = Annual_Income_.k.., color = cluster.2), data = df.norm, size = 2) +
scale_colour_gradientn(colours=rainbow(4)) +
ggtitle('Clusters de Datos con k = 2 / Agrupamiento Jerárquico') +
xlab('Age') + ylab('Annual_Income')
library(patchwork)
install.packages("patchwork")
library(patchwork)
p2 <- ggplot() + geom_point(aes(x = Age, y = Annual_Income_.k.., color = cluster.2), data = df.norm, size = 2) +
scale_colour_gradientn(colours=rainbow(4)) +
ggtitle('Clusters de Datos con k = 2 / Agrupamiento Jerárquico') +
xlab('Age') + ylab('Annual_Income')
p4 <- ggplot() + geom_point(aes(x = Age, y = Annual_Income_.k.., color = cluster.4), data = df.norm, size = 2) +
scale_colour_gradientn(colours=rainbow(4)) +
ggtitle('Clusters de Datos con k = 4 / Agrupamiento Jerárquico') +
xlab('Age') + ylab('Annual_Income')
p5 <- ggplot() + geom_point(aes(x = Age, y = Annual_Income_.k.., color = cluster.5), data = df.norm, size = 2) +
scale_colour_gradientn(colours=rainbow(4)) +
ggtitle('Clusters de Datos con k = 5 / Agrupamiento Jerárquico') +
xlab('Age') + ylab('Annual_Income')
p6 <- ggplot() + geom_point(aes(x = Age, y = Annual_Income_.k.., color = cluster.6), data = df.norm, size = 2) +
scale_colour_gradientn(colours=rainbow(4)) +
ggtitle('Clusters de Datos con k = 6 / Agrupamiento Jerárquico') +
xlab('Age') + ylab('Annual_Income')
(p2 | p4 ) / (p5 | p6)
library(patchwork)
p2 <- ggplot() + geom_point(aes(x = Age, y = Annual_Income_.k.., color = cluster.2), data = df.norm, size = 2) +
scale_colour_gradientn(colours=rainbow(4)) +
ggtitle('Clusters de Datos con k = 2') +
xlab('Age') + ylab('Annual_Income')
p4 <- ggplot() + geom_point(aes(x = Age, y = Annual_Income_.k.., color = cluster.4), data = df.norm, size = 2) +
scale_colour_gradientn(colours=rainbow(4)) +
ggtitle('Clusters de Datos con k = 4') +
xlab('Age') + ylab('Annual_Income')
p5 <- ggplot() + geom_point(aes(x = Age, y = Annual_Income_.k.., color = cluster.5), data = df.norm, size = 2) +
scale_colour_gradientn(colours=rainbow(4)) +
ggtitle('Clusters de Datos con k = 5') +
xlab('Age') + ylab('Annual_Income')
p6 <- ggplot() + geom_point(aes(x = Age, y = Annual_Income_.k.., color = cluster.6), data = df.norm, size = 2) +
scale_colour_gradientn(colours=rainbow(4)) +
ggtitle('Clusters de Datos con k = 6') +
xlab('Age') + ylab('Annual_Income')
(p2 | p4 ) / (p5 | p6) +  plot_annotation(title = 'Agrupamiento Jerárquico')
